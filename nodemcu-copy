#!/usr/bin/expect --

# {{{ elaborate option parsing, see cmdline(n) manpage
package require Tcl 8.5
package require try         ;# Tcllib.
package require cmdline 1.5 ;# First version with proper error-codes.

set options {
    {n	                   "no interactive session after copy has finished"}
    {i                     "interactive session afterwards (default)"}
    {t.arg "/dev/ttyUSB0"  "tty device"}
    {b.arg "115200"        "baud rate"}
}
set usage {: nodemcu-copy [options] src [dst]

    Copy files over a USB serial link to an ESP8266/ESP32 running nodemcu by
    remote-controlling the running lua interpreter, leaving the connection
    open by default, for interactive aroundpoking. Uses picocom internally, quit
    with Ctrl+A Ctrl+Q.

options: }
try {
    array set params [::cmdline::getoptions argv $options $usage]
} trap {CMDLINE USAGE} {msg o} {
    puts stderr $msg
    exit 1
}

set interactive [expr $params(i) || !$params(n)]
set tty $params(t)
set baudrate $params(b)

if {[llength $argv] < 1} {
    puts stderr "Missing argument: source. See -help."
    exit 1
}

set filename [lindex $argv 0]
set dest [file tail $filename]
if {[llength $argv] == 2} {
    set dest [lindex $argv 1]
}
if {[llength $argv] > 2} {
    puts stderr "Too many arguments. See -help."
}

if {[catch {set fd [open $filename]}]} {
    puts "Can't open file: $filename"
    exit 1
}

set file [split [read $fd] \n]
close $fd

# }}}

# {{{ sloppy application logic
spawn  picocom $tty -b $baudrate
sleep 1
send \r
expect "> "

send "=file.open('$dest', 'w');\r"

foreach line $file {
    send "=file.write(\[====\[$line\]====\]..'\\n');\r"; # yolo
    expect "> "
}

send "=file.close()\r"

if $interactive interact

# }}}
